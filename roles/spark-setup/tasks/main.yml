--- 
# Create folder for Spark    
- name: Creates directory for Spark
  file: 
    path: "{{ spark_home }}" 
    state: directory

# Check spark exists       
- name: Check if spark exists already
  stat: path="{{ spark_home }}/current_spark/conf/spark-env.sh"
  register: spark_conf

# Download Spark
- name: Download tarball and check md5
  get_url:
    url: "{{ spark_url_download }}"
    dest: "{{ spark_home }}/{{ spark_package }}"
 #   checksum: md5:{{ spark_md5 }}
    
# Install Spark    
- unarchive: src="{{ spark_home }}/{{ spark_package }}" dest="{{ spark_home }}/" copy=no

# delete link
- name: delete existing symlink to current_spark directory
  file:
    path: "{{ spark_home }}/current_spark"
    state: absent
    
# Create link
- name: Create symlink to Spark
  file:
    src: "spark-{{ spark_version }}-bin-hadoop{{ hadoop_version }}/"
    dest: "{{ spark_home }}/current_spark"
    state: link
    force: yes

# Create folder for spark worker    
- name: Creates directory work for Spark
  file: path="{{ spark_home }}/current_spark/work" state=directory 

 # Create folder for Spark config    
- name: Creates directory for Spark
  file: path="{{ spark_home }}/current_spark/conf/app" state=directory    

- name: Create symlink to cassandra server keystore
  file:
    src: "{{ cassandra_home }}/current_cassandra/conf/{{ inventory_hostname }}.jks"
    dest: "{{ spark_home }}/current_spark/conf/keyStore.jks"
    state: link
    force: yes

# Copy spark-env.sh
- name: Copy spark-env.sh
  template:
    src: spark-env.sh.j2
    dest: "{{ spark_home }}/current_spark/conf/spark-env.sh"
    mode: 0644    

# Copy spark-defaults.conf
- name: Copy spark-defaults.conf
  template:
    src: spark-defaults.conf.j2
    dest: "{{ spark_home }}/current_spark/conf/spark-defaults.conf"
    mode: 0644

# Copy log4j.properties
- name: Copy log4j.properties
  template:
    src: log4j.properties.j2
    dest: "{{ spark_home }}/current_spark/conf/log4j.properties"
    mode: 0644  

# List of slaves
- name: List of slaves
  lineinfile:
    path: "{{ spark_home }}/current_spark/conf/slaves"
    line: '{{ item }}' 
    create: yes
    mode: 0644
  with_items: "{{ groups['cassandranodes'] }}"

# Copy app properties
- name: Copy cassandra properties
  template:
    src: cassandra.properties.j2
    dest: "{{ spark_home }}/current_spark/conf/app/cassandra.properties"
    mode: 0644  

# Copy logback.xml
- name: Copy logback.xml
  template:
    src: logback.xml.j2
    dest: "{{ spark_home }}/current_spark/conf/app/logback.xml"
    mode: 0644  

# Remove tarball
- name: Remove tarball
  file: 
    path: "{{ spark_home }}/{{ spark_package }}"
    state: absent