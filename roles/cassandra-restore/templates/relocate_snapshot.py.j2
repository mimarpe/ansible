import os
import shutil
import fnmatch

# Fonction pour lister repertoires style find
def gen_find_dirs(filepat,top):
    for path, dirlist, filelist in os.walk(top):
        for name in fnmatch.filter(dirlist,filepat):
            yield os.path.join(path,name)

# Main
# find repertoires snapshot
base_path = "{{ cassandra_data_dir }}/"
repertoires = gen_find_dirs("*archive", base_path)

# deplacer fichiers du repertoire snapshot vers nouveau repertoire
for rep in repertoires:
    # on exclude CFs nodes, in the past also system: base_path+"system" not in rep and
    if base_path+"nodes" not in rep:
        print("Processing: " + rep)

        # prepare les paths
        parts = rep.split("/") # [1] data [2] cassandra [3] keyspace [4] cf [5] snapshots [6] archive
        dst = base_path + parts[3] + "/" + parts[4] + "/"
        rep = rep + "/"

        entries_to_mv = os.listdir(rep)

        # mv fichiers snapshot vers repertoire final
        for f in entries_to_mv:
            print("mv " + rep+f + " -> " + dst)
            shutil.move(rep+f, dst)
